{"remainingRequest":"C:\\Users\\Fu Nai Yang's Lab\\Documents\\GitHub\\mouseDatabase\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\Fu Nai Yang's Lab\\Documents\\GitHub\\mouseDatabase\\node_modules\\ng-lazyload-image\\src\\lazyload-image.directive.js","dependencies":[{"path":"C:\\Users\\Fu Nai Yang's Lab\\Documents\\GitHub\\mouseDatabase\\node_modules\\ng-lazyload-image\\src\\lazyload-image.directive.js","mtime":1528996281352},{"path":"C:\\Users\\Fu Nai Yang's Lab\\Documents\\GitHub\\mouseDatabase\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1528996067508},{"path":"C:\\Users\\Fu Nai Yang's Lab\\Documents\\GitHub\\mouseDatabase\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1528996048208}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\nvar core_1 = require(\"@angular/core\");\nvar scroll_listener_1 = require(\"./scroll-listener\");\nvar lazyload_image_1 = require(\"./lazyload-image\");\nvar utils_1 = require(\"./utils\");\nvar LazyLoadImageDirective = /*@__PURE__*/ (function () {\n    function LazyLoadImageDirective(el, ngZone) {\n        this.onLoad = new core_1.EventEmitter();\n        this.elementRef = el;\n        this.ngZone = ngZone;\n        this.propertyChanges$ = new rxjs_1.ReplaySubject();\n    }\n    LazyLoadImageDirective.prototype.ngOnChanges = function (changes) {\n        this.propertyChanges$.next({\n            lazyImage: this.lazyImage,\n            defaultImage: this.defaultImage,\n            errorImage: this.errorImage,\n            scrollTarget: this.scrollTarget,\n            scrollObservable: this.scrollObservable,\n            offset: this.offset | 0,\n            useSrcset: this.useSrcset\n        });\n    };\n    LazyLoadImageDirective.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        if (!utils_1.isWindowDefined()) {\n            return null;\n        }\n        this.ngZone.runOutsideAngular(function () {\n            var scrollObservable;\n            if (_this.scrollObservable) {\n                scrollObservable = _this.scrollObservable.pipe(operators_1.startWith(''));\n            }\n            else {\n                var windowTarget = utils_1.isWindowDefined() ? window : undefined;\n                scrollObservable = scroll_listener_1.getScrollListener(_this.scrollTarget || windowTarget);\n            }\n            _this.scrollSubscription = _this.propertyChanges$.pipe(operators_1.debounceTime(10), operators_1.switchMap(function (props) {\n                return scrollObservable.pipe(lazyload_image_1.lazyLoadImage(_this.elementRef.nativeElement, props.lazyImage, props.defaultImage, props.errorImage, props.offset, props.useSrcset, props.scrollTarget));\n            })).subscribe(function (success) { return _this.onLoad.emit(success); });\n        });\n    };\n    LazyLoadImageDirective.prototype.ngOnDestroy = function () {\n        [this.scrollSubscription]\n            .filter(function (subscription) { return subscription && !subscription.isUnsubscribed; })\n            .forEach(function (subscription) { return subscription.unsubscribe(); });\n    };\n    LazyLoadImageDirective.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[lazyLoad]'\n                },] },\n    ];\n    LazyLoadImageDirective.propDecorators = {\n        \"lazyImage\": [{ type: core_1.Input, args: ['lazyLoad',] },],\n        \"defaultImage\": [{ type: core_1.Input },],\n        \"errorImage\": [{ type: core_1.Input },],\n        \"scrollTarget\": [{ type: core_1.Input },],\n        \"scrollObservable\": [{ type: core_1.Input },],\n        \"offset\": [{ type: core_1.Input },],\n        \"useSrcset\": [{ type: core_1.Input },],\n        \"onLoad\": [{ type: core_1.Output },],\n    };\n    return LazyLoadImageDirective;\n}());\nexports.LazyLoadImageDirective = LazyLoadImageDirective;\n",null]}